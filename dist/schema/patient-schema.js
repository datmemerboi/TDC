"use strict";const Schema=require("mongoose").Schema;var Patient=new Schema({p_id:{type:String,required:!0,index:!0,unique:!0},name:String,dob:{type:Date,default:null},age:{type:Number,default:null},area:String,gender:{type:String,default:null},address:{type:String,default:null},contact:{type:Number,index:!0},med_history:[{type:String}],current_meds:[{type:String}],files:[{type:String}],created_at:{type:Date,default:Date.now}});Patient.statics.getAll=function(){return this.find({},{_id:0,__v:0}).lean().exec()},Patient.statics.countAll=function(){return this.countDocuments()},Patient.statics.getByPid=function(a){return this.findOne({p_id:a},{_id:0,__v:0}).lean().exec()},Patient.statics.getByPidList=function(a){return this.find({p_id:{$in:a}},{_id:0,__v:0}).sort("p_id").lean().exec()},Patient.statics.getLatestPid=function(){return this.find({},{p_id:1}).sort("-created_at").limit(1).exec()},Patient.statics.getDistinctArea=function(){return this.distinct("area")},Patient.statics.findByName=function(a){return this.find({name:{$regex:a,$options:"i"}},{_id:0,__v:0}).lean().exec()},Patient.statics.findByArea=function(a){return this.find({area:{$regex:a,$options:"i"}},{_id:0,__v:0}).lean().exec()},Patient.statics.findByContact=function(a){return this.find({contact:a},{_id:0,__v:0}).lean().exec()},Patient.statics.updateDoc=function(a,b){return this.findOneAndUpdate({p_id:a},{$set:b},{upsert:!0}).exec()},Patient.statics.deleteByPid=function(a){return this.deleteOne({p_id:a}).exec()},module.exports=Patient;