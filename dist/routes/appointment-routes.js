"use strict";const _=require("lodash"),router=require("express").Router(),AppointmentUtils=require("../utils/appointment-utils");router.post("/new",(a,b)=>{console.log(`[API] ${a.method} request to /api/appointment/new/`),a.body&&{}!==a.body&&a.body.p_id&&a.body.appointment_date&&a.body.doctor?AppointmentUtils.NewAppointmentHandler(a.body).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end())}),router.all("/all",(a,b)=>{var c,d;if(console.log(`[API] ${a.method} request to /api/appointment/all/`),null!==(c=a.query)&&void 0!==c&&c.from&&null!==(d=a.query)&&void 0!==d&&d.to){var e,f;AppointmentUtils.DateAppointmentHandler(a.query.from,a.query.to,"true"===(null===(e=a.query)||void 0===e||null===(f=e.count)||void 0===f?void 0:f.toLowerCase())).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}else AppointmentUtils.AllAppointmentHandler().then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}),router.post("/patient/:pid",(a,b)=>{var c;if(console.log(`[API] ${a.method} request to /api/appointment/patient/`),!a.body||{}===a.body||!(null!==(c=a.params)&&void 0!==c&&c.pid))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{var d,e;AppointmentUtils.PatientAppointmentHandler(a.params.pid,"true"===(null===(d=a.query)||void 0===d||null===(e=d.count)||void 0===e?void 0:e.toLowerCase())).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}}),router.all("/doctor",(a,b)=>{if(console.log(`[API] ${a.method} request to /api/appointment/doctor/`),!a.body||{}===a.body||!("doctor"in a.body))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{var c,d;AppointmentUtils.DoctorAppointmentHandler(a.body.doctor,"true"===(null===(c=a.query)||void 0===c||null===(d=c.count)||void 0===d?void 0:d.toLowerCase())).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}}),router.all("/status",(a,b)=>{if(console.log(`[API] ${a.method} request to /api/appointment/status/`),!a.body||{}===a.body||!("status"in a.body))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{var c,d;AppointmentUtils.StatusAppointmentHandler(a.body.status,"true"===(null===(c=a.query)||void 0===c||null===(d=c.count)||void 0===d?void 0:d.toLowerCase())).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}}),router.put("/update/:appid",(a,b)=>{console.log(`[API] ${a.method} request to /api/appointment/update/`),a.body&&{}!==a.body&&a.params.appid?AppointmentUtils.UpdateAppointmentHandler(a.params.appid,a.body).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end())}),module.exports=router;