"use strict";const router=require("express").Router(),TreatmentUtils=require("../utils/treatment-utils");router.all("/new",(a,b)=>{console.log(`[API] ${a.method} request to /api/treatment/new/`),console.log(a.body),a.body&&{}!==a.body?a.body.p_id&&a.body.doctor&&a.body.procedure_done?(console.log(a.body),TreatmentUtils.NewTreatmentHandler(a.body).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end()):(console.error(`[API] Bad Request: missing request body`),b.sendStatus(400).end())}),router.all("/all",(a,b)=>{console.log(`[API] ${a.method} request to /api/treatment/all/`),TreatmentUtils.AllTreatmentHandler().then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}),router.all("/get/:tid",(a,b)=>{var c;console.log(`[API] ${a.method} request to /api/treatment/get/`),null!==(c=a.params)&&void 0!==c&&c.tid?TreatmentUtils.GetTreatmentHandler(a.params.tid).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end())}),router.all("/patient/:pid",(a,b)=>{var c;console.log(`[API] ${a.method} request to /api/treatment/patient/`),null!==(c=a.params)&&void 0!==c&&c.pid?TreatmentUtils.PidTreatmentHandler(a.params.pid).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end())}),router.all("/doctor",(a,b)=>{var c,d;if(console.log(`[API] ${a.method} request to /api/treatment/doctor/`),!(null!==(c=a.query)&&void 0!==c&&c.doctor)&&!(null!==(d=a.body)&&void 0!==d&&d.doctor))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{var e;let c=null!==(e=a.query.doctor)&&void 0!==e?e:a.body.doctor;TreatmentUtils.DoctorTreatmentHandler(c).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}}),router.all("/history/:pid",(a,b)=>{var c;if(console.log(`[API] ${a.method} request to /api/treatment/history/`),!(null!==(c=a.params)&&void 0!==c&&c.pid))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{var d,e;TreatmentUtils.TreatmentHistoryHandler(a.params.pid,"true"===(null===(d=a.query)||void 0===d||null===(e=d.quick)||void 0===e?void 0:e.toLowerCase())).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body)}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500)})}}),router.put("/update/:tid",(a,b)=>{var c;console.log(`[API] ${a.method} request to /api/treatment/update/`),a.body&&{}!==a.body&&null!==(c=a.params)&&void 0!==c&&c.tid?TreatmentUtils.UpdateTreatmentHandler(a.params.tid,a.body).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end())}),router.post("/compatibility",(a,b)=>{console.log(`[API] ${a.method} request to /api/treatment/compatibility`),a.body&&{}!==a.body&&a.body.list?TreatmentUtils.CheckCompatibilityHandler(a.body.list).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):console.error(`[API] Bad Request: missing required parameters`)}),module.exports=router;