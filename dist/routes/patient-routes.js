"use strict";const _=require("lodash"),router=require("express").Router(),PatientUtils=require("../utils/patient-utils");router.post("/new",function(a,b){console.log(`[API] ${a.method} request to /api/patient/new/`),_.isNil(a.body)||_.isEmpty(a.body)||_.isNil(a.body.name)||_.isNil(a.body.contact)?(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end()):PatientUtils.NewPatientHandler(a.body).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}),router.all("/all",function(a,b){console.log(`[API] ${a.method} request to /api/patient/all/`),PatientUtils.AllPatientHandler().then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}),router.all("/get/:pid",function(a,b){console.log(`[API] ${a.method} request to /api/patient/get/`),_.isNil(a.body)||_.isEmpty(a.body)||_.isNil(a.params.pid)?(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end()):PatientUtils.GetPatientHandler(a.params.pid).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}),router.post("/bulk",(a,b)=>{console.log(`[API] ${a.method} request to /api/patient/bulk/`),_.isNil(a.body)||_.isEmpty(a.body)||_.isNil(a.body.pids)||_.isEmpty(a.body.pids)?(console.error(`[API] Bad request: missing required parameters`),b.sendStatus(400).end()):PatientUtils.BulkPatientsHandler(a.body.pids).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}),router.get("/areas",function(a,b){console.log(`[API] ${a.method} request to /api/patient/areas/`),PatientUtils.GetDistinctAreasHandler().then(a=>{b.status(a.status).json(a.body).end()}).catch(a=>{b.sendStatus(500).json(a).end()})}),router.put("/update/:pid",function(a,b){console.log(`[API] ${a.method} request to /api/patient/update/`),_.isNil(a.body)||_.isEmpty(a.body)||_.isNil(a.params.pid)?(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end()):PatientUtils.UpdatePatientHandler(a.params.pid.trim(),a.body).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}),router.all("/search",function(a,b){if(console.log(`[API] ${a.method} request to /api/patient/search/`),"GET"===a.method){// Check query params
if(_.isNil(a.query.term)||_.isNil(a.query.type))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{let c=a.query.term,d=a.query.type;PatientUtils.SearchPatientHandler(c,d.toLowerCase()).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}}else if(_.isNil(a.body)||_.isEmpty(a.body)||_.isNil(a.body.term)||_.isNil(a.body.type))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{let c=a.body.term,d=a.body.type;PatientUtils.SearchPatientHandler(c,d.toLowerCase()).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}}),module.exports=router;