"use strict";const router=require("express").Router(),PatientUtils=require("../utils/patient-utils");router.post("/new",function(a,b){console.log(`[API] ${a.method} request to /api/patient/new/`),a.body&&{}!==a.body?a.body.name&&a.body.contact?PatientUtils.NewPatientHandler(a.body).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end()):(console.error(`[API] Bad Request: missing request body`),b.sendStatus(400).end())}),router.all("/all",function(a,b){console.log(`[API] ${a.method} request to /api/patient/all/`),PatientUtils.AllPatientHandler().then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}),router.all("/get/:pid",function(a,b){console.log(`[API] ${a.method} request to /api/patient/get/`),a.params.pid?PatientUtils.GetPatientHandler(a.params.pid).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end())}),router.post("/bulk",(a,b)=>{console.log(`[API] ${a.method} request to /api/patient/bulk/`),a.body&&{}!==a.body&&a.body.pids?PatientUtils.BulkPatientsHandler(a.body.pids).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad request: missing required parameters`),b.sendStatus(400).end())}),router.get("/areas",function(a,b){console.log(`[API] ${a.method} request to /api/patient/areas/`),PatientUtils.GetDistinctAreasHandler().then(a=>{b.status(a.status).json(a.body).end()}).catch(a=>{b.sendStatus(500).json(a).end()})}),router.put("/update/:pid",function(a,b){console.log(`[API] ${a.method} request to /api/patient/update/`),a.body&&{}!==a.body&&a.params.pid?PatientUtils.UpdatePatientHandler(a.params.pid.trim(),a.body).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()}):(console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end())}),router.all("/search",function(a,b){if(console.log(`[API] ${a.method} request to /api/patient/search/`),"GET"===a.method){var c,d;// Check query params
if(!(null!==(c=a.query)&&void 0!==c&&c.term)||!(null!==(d=a.query)&&void 0!==d&&d.type))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{let c=a.query.term,d=a.query.type;PatientUtils.SearchPatientHandler(c,d.toLowerCase()).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}}else{var e,f;if(!(null!==(e=a.body)&&void 0!==e&&e.term)&&!(null!==(f=a.body)&&void 0!==f&&f.type))console.error(`[API] Bad Request: missing required parameters`),b.sendStatus(400).end();else{let c=a.body.term,d=a.body.type;PatientUtils.SearchPatientHandler(c,d.toLowerCase()).then(a=>{console.log(`[API] Request handled successfully`),b.status(a.status).json(a.body).end()}).catch(a=>{console.error(`[API] Failed to handle request \n ${JSON.stringify(a)}`),b.sendStatus(500).end()})}}}),module.exports=router;